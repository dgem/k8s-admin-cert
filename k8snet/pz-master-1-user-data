#cloud-config
# vim: syntax=yaml
# Documentation: http://cloudinit.readthedocs.io/en/0.7.9/index.html

hostname: pz-master-1
manage_etc_hosts: true

# You could modify this for your own user information
users:
  - name: pi
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: users,docker,video,input
    plain_text_passwd: k8snet
    lock_passwd: false
    ssh_pwauth: true
    chpasswd: { expire: false }

# Update apt packages on first boot
package_update: true

packages:
  - dnsutils
  - dnsmasq
  - hostapd

write_files:
  - path: /etc/systemd/system/rc-local.service
    content: |
      [Unit]
        Description=/etc/rc.local
        ConditionPathExists=/etc/rc.local
      [Service]
        Type=forking
        ExecStart=/etc/rc.local
        TimeoutSec=0
        StandardOutput=tty
        RemainAfterExit=yes
      [Install]
        WantedBy=multi-user.target
  # Every (re)boot
  - path: /etc/rc.local
    permissions: '0755'
    content: |
      #!/usr/bin/env bash
      /sbin/iw dev wlan0 set power_save off
      /sbin/iw dev wlan1 set power_save off
      /sbin/iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
      /sbin/iptables -A FORWARD -i wlan0 -o wlan1 -m state --state RELATED,ESTABLISHED -j ACCEPT
      /sbin/iptables -A FORWARD -i wlan1 -o wlan0 -j ACCEPT
  # DHCP connection to the internet
  - path: /etc/dhcpcd.conf
    content: |
      hostname
      clientid
      persistent
      require dhcp_server_identifier
      option host_name, ntp_servers, interface_mtu
      option domain_name_servers, domain_name, domain_search
      option rapid_commit, classless_static_routes
  # WIFI connection
  - path: /etc/wpa_supplicant/wpa_supplicant.conf
    content: |
      country=gb
      ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
      update_config=1
      network={
        ssid="home_wifi_ssid"
        psk="home_wifi_password"
        proto=RSN
        key_mgmt=WPA-PSK
        pairwise=CCMP
        auth_alg=OPEN
      }

  # Static based AP and NAT for k8s network with dnsmasq & hostapd
  - path: /etc/dnsmasq.conf
    content: |
      bogus-priv
      domain-needed
      interface=lo
      listen-address=127.0.0.1
      interface=wlan1
      listen-address=10.0.0.1
      bind-interfaces
      dhcp-range=10.0.0.2,10.0.255.255,255.255.0.0,24h
      dhcp-host=pz-master-2,10.0.0.2
      dhcp-host=pz-master-3,10.0.0.3
  - path: /etc/network/interfaces.d/wlan1
    content: |
      allow-hotplug wlan1
      iface wlan1 inet static
        address 10.0.0.1
        netmask 255.255.0.0
        gateway 10.0.0.1
        broadcast 10.0.255.255
        hostapd /etc/hostapd/hostapd.conf
  - path: /etc/hostapd/hostapd.conf
    content: |
      interface=wlan1
      driver=nl80211
      ssid=k8snet
      channel=7
      hw_mode=g
      wmm_enabled=0
      macaddr_acl=0
      auth_algs=1
      ignore_broadcast_ssid=0
      wpa=2
      wpa_passphrase=kubernetes
      wpa_key_mgmt=WPA-PSK
      wpa_pairwise=TKIP
      rsn_pairwise=CCMP
  # Kubernetes repo
  - path: /etc/apt/sources.list.d/kubernetes.list
    content: |
      deb https://apt.kubernetes.io/ kubernetes-xenial main

# Run once on first boot only
runcmd:
  # enable IP forwarding
  - 'sysctl -w net.ipv4.ip_forward=1'
  # enable rc.local (NAT & powersaving off for wifi)
  - 'systemctl enable rc-local'
  - 'systemctl start rc-local'
  # Pickup the hostname changes
  - 'systemctl restart avahi-daemon'
  # Add google apt repo key and install k8s and upgrade all the things
  - 'curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add'
  - 'apt-get update && apt-get upgrade -y && apt-get install -y kubelet kubeadm kubectl'
  # Prevent kubernetes being updated automatically by apt
  - 'mv /etc/apt/sources.list.d/kubernetes.list /etc/apt/sources.list.d/kubernetes.list.ignore'


power_state:
  delay: 'now'
  mode: reboot
  message: '****  CLOUD-INIT COMPLETED. REBOOTING, PLEASE HOLD ****'
